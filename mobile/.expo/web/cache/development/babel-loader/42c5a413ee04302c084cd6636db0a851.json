{"ast":null,"code":"import React from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport { Feather } from '@expo/vector-icons';\nimport styles from \"./styles\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport var SuccessModal = function SuccessModal(_ref) {\n  var modalVisible = _ref.modalVisible,\n      funcaoOnRequestClose = _ref.funcaoOnRequestClose,\n      mensage = _ref.mensage;\n\n  if (mensage == undefined || mensage == \"\") {\n    mensage = \"Operação realizada com sucesso!\";\n  }\n\n  return _jsx(Modal, {\n    animationType: \"fade\",\n    transparent: true,\n    visible: modalVisible,\n    onRequestClose: funcaoOnRequestClose,\n    statusBarTranslucent: true,\n    children: _jsx(View, {\n      style: styles.centeredView,\n      children: _jsxs(View, {\n        style: styles.modalView,\n        children: [_jsx(Feather, {\n          name: \"check-circle\",\n          size: 50,\n          color: '#5cb85c',\n          style: {\n            marginTop: 20\n          }\n        }), _jsx(Text, {\n          style: styles.modalText,\n          children: mensage\n        }), _jsx(Pressable, {\n          style: styles.button,\n          onPress: funcaoOnRequestClose,\n          children: _jsx(Text, {\n            style: styles.textStyle,\n            children: \"OK\"\n          })\n        })]\n      })\n    })\n  });\n};\nexport var FeedbackModal = function FeedbackModal(_ref2) {\n  var modalVisible = _ref2.modalVisible,\n      funcaoOnRequestClose = _ref2.funcaoOnRequestClose,\n      mensage = _ref2.mensage;\n\n  if (mensage == undefined || mensage == \"\") {\n    mensage = \"Ops, tivemos um problema! Por favor tente novamente mais tarde.\";\n  }\n\n  return _jsx(Modal, {\n    animationType: \"fade\",\n    transparent: true,\n    visible: modalVisible,\n    onRequestClose: funcaoOnRequestClose,\n    statusBarTranslucent: true,\n    children: _jsx(View, {\n      style: styles.centeredView,\n      children: _jsxs(View, {\n        style: styles.modalView,\n        children: [_jsx(Feather, {\n          name: \"alert-circle\",\n          size: 50,\n          color: '#eca400',\n          style: {\n            marginTop: 20\n          }\n        }), _jsx(Text, {\n          style: styles.modalText,\n          children: mensage\n        }), _jsx(Pressable, {\n          style: styles.button,\n          onPress: funcaoOnRequestClose,\n          children: _jsx(Text, {\n            style: styles.textStyle,\n            children: \"OK\"\n          })\n        })]\n      })\n    })\n  });\n};\nexport var ErrorModal = function ErrorModal(_ref3) {\n  var modalVisible = _ref3.modalVisible,\n      funcaoOnRequestClose = _ref3.funcaoOnRequestClose,\n      mensage = _ref3.mensage;\n  return _jsx(Modal, {\n    animationType: \"fade\",\n    transparent: true,\n    visible: modalVisible,\n    onRequestClose: funcaoOnRequestClose,\n    statusBarTranslucent: true,\n    children: _jsx(View, {\n      style: styles.centeredView,\n      children: _jsxs(View, {\n        style: styles.modalView,\n        children: [_jsx(Feather, {\n          name: \"x-circle\",\n          size: 50,\n          color: '#d9534f',\n          style: {\n            marginTop: 20\n          }\n        }), _jsx(Text, {\n          style: styles.modalText,\n          children: mensage\n        }), _jsx(Pressable, {\n          style: styles.button,\n          onPress: funcaoOnRequestClose,\n          children: _jsx(Text, {\n            style: styles.textStyle,\n            children: \"OK\"\n          })\n        })]\n      })\n    })\n  });\n};\nexport var DecisionModal = function DecisionModal(_ref4) {\n  var modalVisible = _ref4.modalVisible,\n      funcaoOnRequestClose = _ref4.funcaoOnRequestClose,\n      mensage = _ref4.mensage;\n\n  function closeModal() {\n    modalVisible = false;\n    console.log(modalVisible);\n  }\n\n  return _jsx(Modal, {\n    animationType: \"fade\",\n    transparent: true,\n    visible: modalVisible,\n    onRequestClose: funcaoOnRequestClose,\n    statusBarTranslucent: true,\n    children: _jsx(View, {\n      style: styles.centeredView,\n      children: _jsxs(View, {\n        style: styles.modalView,\n        children: [_jsx(Feather, {\n          name: \"help-circle\",\n          size: 50,\n          color: '#f0ad4e',\n          style: {\n            marginTop: 20\n          }\n        }), _jsx(Text, {\n          style: styles.modalText,\n          children: mensage\n        }), _jsxs(View, {\n          style: styles.groupButton,\n          children: [_jsx(Pressable, {\n            style: styles.leftButton,\n            onPress: closeModal,\n            children: _jsx(Text, {\n              style: styles.textStyle,\n              children: \"N\\xE3o\"\n            })\n          }), _jsx(Pressable, {\n            style: styles.rightButton,\n            onPress: funcaoOnRequestClose,\n            children: _jsx(Text, {\n              style: styles.textStyle,\n              children: \"Sim\"\n            })\n          })]\n        })]\n      })\n    })\n  });\n};","map":{"version":3,"sources":["C:/Users/tizen/OneDrive/Documentos/GitHub/MeuPossante/mobile/src/components/feedbackModal/index.tsx"],"names":["React","Feather","styles","SuccessModal","modalVisible","funcaoOnRequestClose","mensage","undefined","centeredView","modalView","marginTop","modalText","button","textStyle","FeedbackModal","ErrorModal","DecisionModal","closeModal","console","log","groupButton","leftButton","rightButton"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Text, View, Modal, Pressable } from \"react-native\";\r\nimport { Feather } from '@expo/vector-icons';\r\n\r\nimport styles from './styles';\r\n\r\ninterface modalProps {\r\n    modalVisible: boolean;\r\n    funcaoOnRequestClose?: any;\r\n    mensage?: string;\r\n}\r\n\r\n/**\r\n * Componente para exibir o modal de erro ou sucesso de uma operação.\r\n * \r\n * @param modalVisible: (boolean) Este paremetro abre ou fecha o modal;\r\n * @param funcaoOnRequestClose: (any) Informe uma função que deseje realizar quando o modal for fechado;\r\n * @param modalTypeWarning: (boolean) Define se o tipo do modal é de aviso;\r\n * \r\n */\r\n\r\nexport const SuccessModal: React.FC<modalProps> = ({ modalVisible, funcaoOnRequestClose, mensage }) => {\r\n\r\n    if (mensage == undefined || mensage == \"\") {\r\n        mensage = \"Operação realizada com sucesso!\"\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            animationType=\"fade\"\r\n            transparent={true}\r\n            visible={modalVisible}\r\n            onRequestClose={funcaoOnRequestClose}\r\n            statusBarTranslucent={true}\r\n        >\r\n            <View style={styles.centeredView}>\r\n                <View style={styles.modalView}>\r\n                    <Feather name='check-circle' size={50} color={'#5cb85c'} style={{ marginTop: 20 }} />\r\n                    <Text style={styles.modalText}>{mensage}</Text>\r\n                    <Pressable\r\n                        style={styles.button}\r\n                        onPress={funcaoOnRequestClose}>\r\n                        <Text style={styles.textStyle}>OK</Text>\r\n                    </Pressable>\r\n                </View>\r\n            </View>\r\n        </Modal>\r\n    );\r\n}\r\n\r\nexport const FeedbackModal: React.FC<modalProps> = ({ modalVisible, funcaoOnRequestClose, mensage }) => {\r\n\r\n    if (mensage == undefined || mensage == \"\") {\r\n        mensage = \"Ops, tivemos um problema! Por favor tente novamente mais tarde.\"\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            animationType=\"fade\"\r\n            transparent={true}\r\n            visible={modalVisible}\r\n            onRequestClose={funcaoOnRequestClose}\r\n            statusBarTranslucent={true}\r\n        >\r\n            <View style={styles.centeredView}>\r\n                <View style={styles.modalView}>\r\n                    <Feather name='alert-circle' size={50} color={'#eca400'} style={{ marginTop: 20 }} />\r\n                    <Text style={styles.modalText}>{mensage}</Text>\r\n                    <Pressable\r\n                        style={styles.button}\r\n                        onPress={funcaoOnRequestClose}>\r\n                        <Text style={styles.textStyle}>OK</Text>\r\n                    </Pressable>\r\n                </View>\r\n            </View>\r\n        </Modal>\r\n    );\r\n}\r\n\r\nexport const ErrorModal: React.FC<modalProps> = ({ modalVisible, funcaoOnRequestClose, mensage }) => {\r\n\r\n    return (\r\n        <Modal\r\n            animationType=\"fade\"\r\n            transparent={true}\r\n            visible={modalVisible}\r\n            onRequestClose={funcaoOnRequestClose}\r\n            statusBarTranslucent={true}\r\n        >\r\n            <View style={styles.centeredView}>\r\n                <View style={styles.modalView}>\r\n                    <Feather name='x-circle' size={50} color={'#d9534f'} style={{ marginTop: 20 }} />\r\n                    <Text style={styles.modalText}>{mensage}</Text>\r\n                    <Pressable\r\n                        style={styles.button}\r\n                        onPress={funcaoOnRequestClose}>\r\n                        <Text style={styles.textStyle}>OK</Text>\r\n                    </Pressable>\r\n                </View>\r\n            </View>\r\n        </Modal>\r\n    );\r\n}\r\n\r\nexport const DecisionModal: React.FC<modalProps> = ({ modalVisible, funcaoOnRequestClose, mensage }) => {\r\n\r\n    function closeModal(){\r\n        modalVisible = false;\r\n        console.log(modalVisible)\r\n    } //Não funciona\r\n\r\n    return (\r\n        <Modal\r\n            animationType=\"fade\"\r\n            transparent={true}\r\n            visible={modalVisible}\r\n            onRequestClose={funcaoOnRequestClose}\r\n            statusBarTranslucent={true}\r\n        >\r\n            <View style={styles.centeredView}>\r\n                <View style={styles.modalView}>\r\n                    <Feather name='help-circle' size={50} color={'#f0ad4e'} style={{ marginTop: 20 }} />\r\n                    <Text style={styles.modalText}>{mensage}</Text>\r\n                    <View style={styles.groupButton}>\r\n                        <Pressable\r\n                            style={styles.leftButton}\r\n                            onPress={closeModal}>\r\n                            <Text style={styles.textStyle}>Não</Text>\r\n                        </Pressable>\r\n                        <Pressable\r\n                            style={styles.rightButton}\r\n                            onPress={funcaoOnRequestClose}>\r\n                            <Text style={styles.textStyle}>Sim</Text>\r\n                        </Pressable>\r\n                    </View>\r\n                </View>\r\n            </View>\r\n        </Modal>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}