{"ast":null,"code":"import { useEvent, useHandler } from \"./Hooks\";\nexport function useAnimatedScrollHandler(handlers, dependencies) {\n  var scrollHandlers = typeof handlers === 'function' ? {\n    onScroll: handlers\n  } : handlers;\n\n  var _useHandler = useHandler(scrollHandlers, dependencies),\n      context = _useHandler.context,\n      doDependenciesDiffer = _useHandler.doDependenciesDiffer;\n\n  var subscribeForEvents = ['onScroll'];\n\n  if (scrollHandlers.onBeginDrag !== undefined) {\n    subscribeForEvents.push('onScrollBeginDrag');\n  }\n\n  if (scrollHandlers.onEndDrag !== undefined) {\n    subscribeForEvents.push('onScrollEndDrag');\n  }\n\n  if (scrollHandlers.onMomentumBegin !== undefined) {\n    subscribeForEvents.push('onMomentumScrollBegin');\n  }\n\n  if (scrollHandlers.onMomentumEnd !== undefined) {\n    subscribeForEvents.push('onMomentumScrollEnd');\n  }\n\n  return useEvent(function () {\n    var _f = function _f(event) {\n      var onScroll = scrollHandlers.onScroll,\n          onBeginDrag = scrollHandlers.onBeginDrag,\n          onEndDrag = scrollHandlers.onEndDrag,\n          onMomentumBegin = scrollHandlers.onMomentumBegin,\n          onMomentumEnd = scrollHandlers.onMomentumEnd;\n\n      if (onScroll && event.eventName.endsWith('onScroll')) {\n        onScroll(event, context);\n      } else if (onBeginDrag && event.eventName.endsWith('onScrollBeginDrag')) {\n        onBeginDrag(event, context);\n      } else if (onEndDrag && event.eventName.endsWith('onScrollEndDrag')) {\n        onEndDrag(event, context);\n      } else if (onMomentumBegin && event.eventName.endsWith('onMomentumScrollBegin')) {\n        onMomentumBegin(event, context);\n      } else if (onMomentumEnd && event.eventName.endsWith('onMomentumScrollEnd')) {\n        onMomentumEnd(event, context);\n      }\n    };\n\n    _f._closure = {\n      scrollHandlers: scrollHandlers,\n      context: context\n    };\n    _f.asString = \"function _f(event){const{scrollHandlers,context}=jsThis._closure;{const{onScroll:onScroll,onBeginDrag:onBeginDrag,onEndDrag:onEndDrag,onMomentumBegin:onMomentumBegin,onMomentumEnd:onMomentumEnd}=scrollHandlers;if(onScroll&&event.eventName.endsWith('onScroll')){onScroll(event,context);}else if(onBeginDrag&&event.eventName.endsWith('onScrollBeginDrag')){onBeginDrag(event,context);}else if(onEndDrag&&event.eventName.endsWith('onScrollEndDrag')){onEndDrag(event,context);}else if(onMomentumBegin&&event.eventName.endsWith('onMomentumScrollBegin')){onMomentumBegin(event,context);}else if(onMomentumEnd&&event.eventName.endsWith('onMomentumScrollEnd')){onMomentumEnd(event,context);}}}\";\n    _f.__workletHash = 10951464444062;\n    _f.__location = \"C:\\\\Users\\\\tizen\\\\OneDrive\\\\Documentos\\\\GitHub\\\\MeuPossante\\\\mobile\\\\node_modules\\\\react-native-reanimated\\\\lib\\\\reanimated2\\\\hook\\\\useAnimatedScrollHandler.js (20:20)\";\n\n    global.__reanimatedWorkletInit(_f);\n\n    return _f;\n  }(), subscribeForEvents, doDependenciesDiffer);\n}","map":{"version":3,"sources":["C:/Users/tizen/OneDrive/Documentos/GitHub/MeuPossante/mobile/node_modules/react-native-reanimated/lib/reanimated2/hook/useAnimatedScrollHandler.js"],"names":["useEvent","useHandler","useAnimatedScrollHandler","handlers","dependencies","scrollHandlers","onScroll","context","doDependenciesDiffer","subscribeForEvents","onBeginDrag","undefined","push","onEndDrag","onMomentumBegin","onMomentumEnd","event","eventName","endsWith"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,UAAnB;AACA,OAAO,SAASC,wBAAT,CAAkCC,QAAlC,EAA4CC,YAA5C,EAA0D;AAE7D,MAAMC,cAAc,GAAG,OAAOF,QAAP,KAAoB,UAApB,GAAiC;AAAEG,IAAAA,QAAQ,EAAEH;AAAZ,GAAjC,GAA0DA,QAAjF;;AAF6D,oBAGnBF,UAAU,CAACI,cAAD,EAAiBD,YAAjB,CAHS;AAAA,MAGrDG,OAHqD,eAGrDA,OAHqD;AAAA,MAG5CC,oBAH4C,eAG5CA,oBAH4C;;AAK7D,MAAMC,kBAAkB,GAAG,CAAC,UAAD,CAA3B;;AACA,MAAIJ,cAAc,CAACK,WAAf,KAA+BC,SAAnC,EAA8C;AAC1CF,IAAAA,kBAAkB,CAACG,IAAnB,CAAwB,mBAAxB;AACH;;AACD,MAAIP,cAAc,CAACQ,SAAf,KAA6BF,SAAjC,EAA4C;AACxCF,IAAAA,kBAAkB,CAACG,IAAnB,CAAwB,iBAAxB;AACH;;AACD,MAAIP,cAAc,CAACS,eAAf,KAAmCH,SAAvC,EAAkD;AAC9CF,IAAAA,kBAAkB,CAACG,IAAnB,CAAwB,uBAAxB;AACH;;AACD,MAAIP,cAAc,CAACU,aAAf,KAAiCJ,SAArC,EAAgD;AAC5CF,IAAAA,kBAAkB,CAACG,IAAnB,CAAwB,qBAAxB;AACH;;AACD,SAAOZ,QAAQ;AAAA,yBAAEgB,KAAF,EAAY;AAAA,UAEfV,QAFe,GAEuDD,cAFvD,CAEfC,QAFe;AAAA,UAELI,WAFK,GAEuDL,cAFvD,CAELK,WAFK;AAAA,UAEQG,SAFR,GAEuDR,cAFvD,CAEQQ,SAFR;AAAA,UAEmBC,eAFnB,GAEuDT,cAFvD,CAEmBS,eAFnB;AAAA,UAEoCC,aAFpC,GAEuDV,cAFvD,CAEoCU,aAFpC;;AAGvB,UAAIT,QAAQ,IAAIU,KAAK,CAACC,SAAN,CAAgBC,QAAhB,CAAyB,UAAzB,CAAhB,EAAsD;AAClDZ,QAAAA,QAAQ,CAACU,KAAD,EAAQT,OAAR,CAAR;AACH,OAFD,MAGK,IAAIG,WAAW,IAAIM,KAAK,CAACC,SAAN,CAAgBC,QAAhB,CAAyB,mBAAzB,CAAnB,EAAkE;AACnER,QAAAA,WAAW,CAACM,KAAD,EAAQT,OAAR,CAAX;AACH,OAFI,MAGA,IAAIM,SAAS,IAAIG,KAAK,CAACC,SAAN,CAAgBC,QAAhB,CAAyB,iBAAzB,CAAjB,EAA8D;AAC/DL,QAAAA,SAAS,CAACG,KAAD,EAAQT,OAAR,CAAT;AACH,OAFI,MAGA,IAAIO,eAAe,IACpBE,KAAK,CAACC,SAAN,CAAgBC,QAAhB,CAAyB,uBAAzB,CADC,EACkD;AACnDJ,QAAAA,eAAe,CAACE,KAAD,EAAQT,OAAR,CAAf;AACH,OAHI,MAIA,IAAIQ,aAAa,IAClBC,KAAK,CAACC,SAAN,CAAgBC,QAAhB,CAAyB,qBAAzB,CADC,EACgD;AACjDH,QAAAA,aAAa,CAACC,KAAD,EAAQT,OAAR,CAAb;AACH;AACJ,KApBc;;AAAA;AAAA,sBAXbF,cAWa;AAAA,eAAME;AAAN;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA,OAoBZE,kBApBY,EAoBQD,oBApBR,CAAf;AAqBH","sourcesContent":["import { useEvent, useHandler } from './Hooks';\nexport function useAnimatedScrollHandler(handlers, dependencies) {\n    // case when handlers is a function\n    const scrollHandlers = typeof handlers === 'function' ? { onScroll: handlers } : handlers;\n    const { context, doDependenciesDiffer } = useHandler(scrollHandlers, dependencies);\n    // build event subscription array\n    const subscribeForEvents = ['onScroll'];\n    if (scrollHandlers.onBeginDrag !== undefined) {\n        subscribeForEvents.push('onScrollBeginDrag');\n    }\n    if (scrollHandlers.onEndDrag !== undefined) {\n        subscribeForEvents.push('onScrollEndDrag');\n    }\n    if (scrollHandlers.onMomentumBegin !== undefined) {\n        subscribeForEvents.push('onMomentumScrollBegin');\n    }\n    if (scrollHandlers.onMomentumEnd !== undefined) {\n        subscribeForEvents.push('onMomentumScrollEnd');\n    }\n    return useEvent((event) => {\n        'worklet';\n        const { onScroll, onBeginDrag, onEndDrag, onMomentumBegin, onMomentumEnd, } = scrollHandlers;\n        if (onScroll && event.eventName.endsWith('onScroll')) {\n            onScroll(event, context);\n        }\n        else if (onBeginDrag && event.eventName.endsWith('onScrollBeginDrag')) {\n            onBeginDrag(event, context);\n        }\n        else if (onEndDrag && event.eventName.endsWith('onScrollEndDrag')) {\n            onEndDrag(event, context);\n        }\n        else if (onMomentumBegin &&\n            event.eventName.endsWith('onMomentumScrollBegin')) {\n            onMomentumBegin(event, context);\n        }\n        else if (onMomentumEnd &&\n            event.eventName.endsWith('onMomentumScrollEnd')) {\n            onMomentumEnd(event, context);\n        }\n    }, subscribeForEvents, doDependenciesDiffer);\n}\n"]},"metadata":{},"sourceType":"module"}