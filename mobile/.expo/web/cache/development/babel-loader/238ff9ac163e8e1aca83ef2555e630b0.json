{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { createContext, useState, useEffect, useContext } from 'react';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport * as auth from \"../services/auth\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar AuthContext = createContext({});\nexport var AuthProvider = function AuthProvider(_ref) {\n  var children = _ref.children;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      user = _useState2[0],\n      setUser = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      loading = _useState4[0],\n      setLoading = _useState4[1];\n\n  useEffect(function () {\n    function loadStorageData() {\n      var storageUser, storageToken;\n      return _regeneratorRuntime.async(function loadStorageData$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('@MeuPossante:user'));\n\n            case 2:\n              storageUser = _context.sent;\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('@MeuPossante:token'));\n\n            case 5:\n              storageToken = _context.sent;\n\n              if (storageUser && storageToken) {\n                setUser(JSON.parse(storageUser));\n                setLoading(false);\n              }\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n\n    ;\n    loadStorageData();\n  }, []);\n\n  function signIn() {\n    var response;\n    return _regeneratorRuntime.async(function signIn$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(auth.signIn());\n\n          case 2:\n            response = _context2.sent;\n            setUser(response.user);\n            _context2.next = 6;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem('@MeuPossante:user', JSON.stringify(response.user)));\n\n          case 6:\n            _context2.next = 8;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem('@MeuPossante:token', response.token));\n\n          case 8:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  ;\n\n  function signOut() {\n    AsyncStorage.clear().then(function () {\n      setUser(null);\n    });\n  }\n\n  ;\n  return _jsx(AuthContext.Provider, {\n    value: {\n      signed: !!user,\n      user: user,\n      loading: loading,\n      signIn: signIn,\n      signOut: signOut\n    },\n    children: children\n  });\n};\nexport function useAuth() {\n  var context = useContext(AuthContext);\n  return context;\n}","map":{"version":3,"sources":["C:/Users/tizen/OneDrive/Documentos/GitHub/MeuPossante/mobile/src/contexts/auth.tsx"],"names":["React","createContext","useState","useEffect","useContext","AsyncStorage","auth","AuthContext","AuthProvider","children","user","setUser","loading","setLoading","loadStorageData","getItem","storageUser","storageToken","JSON","parse","signIn","response","setItem","stringify","token","signOut","clear","then","signed","useAuth","context"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,QAA/B,EAAyCC,SAAzC,EAAoDC,UAApD,QAAsE,OAAtE;AACA,OAAOC,YAAP,MAAyB,2CAAzB;AACA,OAAO,KAAKC,IAAZ;;AAWA,IAAMC,WAAW,GAAGN,aAAa,CAAkB,EAAlB,CAAjC;AAEA,OAAO,IAAMO,YAAsB,GAAG,SAAzBA,YAAyB,OAAkB;AAAA,MAAfC,QAAe,QAAfA,QAAe;;AAAA,kBAC5BP,QAAQ,CAAgB,IAAhB,CADoB;AAAA;AAAA,MAC7CQ,IAD6C;AAAA,MACvCC,OADuC;;AAAA,mBAEtBT,QAAQ,CAAC,KAAD,CAFc;AAAA;AAAA,MAE7CU,OAF6C;AAAA,MAEpCC,UAFoC;;AAIpDV,EAAAA,SAAS,CAAC,YAAM;AACZ,aAAeW,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CAE8BT,YAAY,CAACU,OAAb,CAAqB,mBAArB,CAF9B;;AAAA;AAEUC,cAAAA,WAFV;AAAA;AAAA,+CAG+BX,YAAY,CAACU,OAAb,CAAqB,oBAArB,CAH/B;;AAAA;AAGUE,cAAAA,YAHV;;AAKI,kBAAID,WAAW,IAAIC,YAAnB,EAAiC;AAG7BN,gBAAAA,OAAO,CAACO,IAAI,CAACC,KAAL,CAAWH,WAAX,CAAD,CAAP;AACAH,gBAAAA,UAAU,CAAC,KAAD,CAAV;AACH;;AAVL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAWC;AAEDC,IAAAA,eAAe;AAClB,GAfQ,EAeN,EAfM,CAAT;;AAiBA,WAAeM,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAC2Bd,IAAI,CAACc,MAAL,EAD3B;;AAAA;AACUC,YAAAA,QADV;AAEIV,YAAAA,OAAO,CAACU,QAAQ,CAACX,IAAV,CAAP;AAFJ;AAAA,6CAOUL,YAAY,CAACiB,OAAb,CAAqB,mBAArB,EAA0CJ,IAAI,CAACK,SAAL,CAAeF,QAAQ,CAACX,IAAxB,CAA1C,CAPV;;AAAA;AAAA;AAAA,6CAQUL,YAAY,CAACiB,OAAb,CAAqB,oBAArB,EAA2CD,QAAQ,CAACG,KAApD,CARV;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AASC;;AAED,WAASC,OAAT,GAAmB;AACfpB,IAAAA,YAAY,CAACqB,KAAb,GAAqBC,IAArB,CAA0B,YAAM;AAC5BhB,MAAAA,OAAO,CAAC,IAAD,CAAP;AACH,KAFD;AAGH;;AAAA;AAED,SACI,KAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAAEiB,MAAAA,MAAM,EAAE,CAAC,CAAClB,IAAZ;AAAkBA,MAAAA,IAAI,EAAJA,IAAlB;AAAwBE,MAAAA,OAAO,EAAPA,OAAxB;AAAiCQ,MAAAA,MAAM,EAANA,MAAjC;AAAyCK,MAAAA,OAAO,EAAPA;AAAzC,KAA7B;AAAA,cACKhB;AADL,IADJ;AAKH,CA3CM;AA6CP,OAAO,SAASoB,OAAT,GAAmB;AACtB,MAAMC,OAAO,GAAG1B,UAAU,CAACG,WAAD,CAA1B;AAEA,SAAOuB,OAAP;AACH","sourcesContent":["import React, { createContext, useState, useEffect, useContext } from 'react';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport * as auth from '../services/auth';\r\nimport api from '../services/api';\r\n\r\ninterface AuthContextData {\r\n    signed: boolean;\r\n    user: object | null;\r\n    loading: boolean;\r\n    signIn(): Promise<void>;\r\n    signOut(): void;\r\n}\r\n\r\nconst AuthContext = createContext<AuthContextData>({} as AuthContextData);\r\n\r\nexport const AuthProvider: React.FC = ({ children }) => {\r\n    const [user, setUser] = useState<object | null>(null);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    useEffect(() => {\r\n        async function loadStorageData() {\r\n            //Alterar para multiGet\r\n            const storageUser = await AsyncStorage.getItem('@MeuPossante:user');\r\n            const storageToken = await AsyncStorage.getItem('@MeuPossante:token');\r\n\r\n            if (storageUser && storageToken) {\r\n                //Exemplo de implementação de Token\r\n                //api.defaults.headers['Authorization'] = `Bearer ${storageToken}`;\r\n                setUser(JSON.parse(storageUser));\r\n                setLoading(false);\r\n            }\r\n        };\r\n\r\n        loadStorageData();\r\n    }, []);\r\n\r\n    async function signIn() {\r\n        const response = await auth.signIn();\r\n        setUser(response.user);\r\n\r\n        //Exemplo de implementação de Token\r\n        //api.defaults.headers['Authorization'] = `Bearer ${response.token}`;\r\n\r\n        await AsyncStorage.setItem('@MeuPossante:user', JSON.stringify(response.user));\r\n        await AsyncStorage.setItem('@MeuPossante:token', response.token);\r\n    };\r\n\r\n    function signOut() {\r\n        AsyncStorage.clear().then(() => {\r\n            setUser(null);\r\n        });\r\n    };\r\n\r\n    return (\r\n        <AuthContext.Provider value={{ signed: !!user, user, loading, signIn, signOut }}>\r\n            {children}\r\n        </AuthContext.Provider>\r\n    );\r\n};\r\n\r\nexport function useAuth() {\r\n    const context = useContext(AuthContext);\r\n\r\n    return context;\r\n}"]},"metadata":{},"sourceType":"module"}