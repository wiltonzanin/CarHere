{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport styles from \"./styles\";\nimport DropDownPicker from \"react-native-dropdown-picker\";\nimport BackScreen from \"../../../components/backScreen\";\nimport TextField from \"../../../components/textField\";\nimport LoadingScreen from \"../../../components/loadingScreen\";\nimport { Button } from \"../../../components/buttons\";\nimport { SuccessModal, FeedbackModal } from \"../../../components/feedbackModal\";\nimport api from \"../../../services/api\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction Autonomia(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      carregando = _useState2[0],\n      setCarregando = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      modalVisible = _useState4[0],\n      setModalVisible = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      modalWarning = _useState6[0],\n      setModalWarning = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      modalMensage = _useState8[0],\n      setModalMensage = _useState8[1];\n\n  var _useState9 = useState([]),\n      _useState10 = _slicedToArray(_useState9, 2),\n      carros = _useState10[0],\n      setCarros = _useState10[1];\n\n  var _useState11 = useState(\"\"),\n      _useState12 = _slicedToArray(_useState11, 2),\n      carro = _useState12[0],\n      setCarro = _useState12[1];\n\n  var _useState13 = useState(\"\"),\n      _useState14 = _slicedToArray(_useState13, 2),\n      kmInicial = _useState14[0],\n      setkmInicial = _useState14[1];\n\n  var _useState15 = useState(\"\"),\n      _useState16 = _slicedToArray(_useState15, 2),\n      kmFinal = _useState16[0],\n      setkmFinal = _useState16[1];\n\n  var _useState17 = useState(\"\"),\n      _useState18 = _slicedToArray(_useState17, 2),\n      litrosAbastecidos = _useState18[0],\n      setLitrosAbastecidos = _useState18[1];\n\n  var _useState19 = useState(\"\"),\n      _useState20 = _slicedToArray(_useState19, 2),\n      combustivel = _useState20[0],\n      setCombustivel = _useState20[1];\n\n  var _useState21 = useState(\"\"),\n      _useState22 = _slicedToArray(_useState21, 2),\n      percurso = _useState22[0],\n      setPercurso = _useState22[1];\n\n  var kmRodados = Number(kmFinal) - Number(kmInicial);\n  var mediaConsumo = 0;\n\n  if (kmRodados > 0 && Number(litrosAbastecidos) > 0) {\n    mediaConsumo = kmRodados / Number(litrosAbastecidos);\n    mediaConsumo = Number(mediaConsumo.toFixed(2));\n  }\n\n  useEffect(function () {\n    api.get('carros/1').then(function (response) {\n      setCarros(response.data);\n    });\n  }, []);\n\n  function handleCreateAutonomia() {\n    var data;\n    return _regeneratorRuntime.async(function handleCreateAutonomia$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            data = new FormData();\n            data.append(\"kmInicial\", kmInicial);\n            data.append(\"kmFinal\", kmFinal);\n            data.append(\"litroAbastecidos\", litrosAbastecidos);\n            data.append(\"tipoCombustivel\", combustivel);\n            data.append(\"percurso\", percurso);\n            data.append(\"mediaConsumo\", mediaConsumo.toString());\n            data.append(\"carro\", carro);\n            _context.prev = 8;\n            setCarregando(true);\n            _context.next = 12;\n            return _regeneratorRuntime.awrap(api.post(\"/autonomia\", data));\n\n          case 12:\n            _context.next = 20;\n            break;\n\n          case 14:\n            _context.prev = 14;\n            _context.t0 = _context[\"catch\"](8);\n            setCarregando(false);\n            setModalMensage(\"\");\n            setModalWarning(true);\n            return _context.abrupt(\"return\");\n\n          case 20:\n            setModalMensage(\"Autonomia do veículo cadastrada com sucesso!\");\n            setModalVisible(true);\n\n          case 22:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[8, 14]], Promise);\n  }\n\n  function handleNavigateToVeiculos() {\n    setModalVisible(!modalVisible);\n    setCarregando(false);\n\n    if (modalWarning == false) {\n      navigation.navigate(\"VeiculosCadastrados\");\n    }\n  }\n\n  function closeModal() {\n    setModalWarning(false);\n    setCarregando(false);\n  }\n\n  return _jsxs(ScrollView, {\n    contentContainerStyle: {\n      flexGrow: 1\n    },\n    children: [_jsx(LoadingScreen, {\n      carregando: carregando\n    }), _jsx(SuccessModal, {\n      modalVisible: modalVisible,\n      funcaoOnRequestClose: handleNavigateToVeiculos,\n      mensage: modalMensage\n    }), _jsx(FeedbackModal, {\n      modalVisible: modalWarning,\n      funcaoOnRequestClose: closeModal,\n      mensage: modalMensage\n    }), _jsxs(View, {\n      style: styles.container,\n      children: [_jsxs(View, {\n        style: styles.header,\n        children: [_jsx(BackScreen, {}), _jsx(Text, {\n          style: styles.title,\n          children: \"Autonomia\"\n        }), _jsx(View, {})]\n      }), _jsxs(View, {\n        children: [_jsx(Text, {\n          style: styles.text,\n          children: \"Ve\\xEDculo\"\n        }), _jsx(DropDownPicker, {\n          placeholder: \"Selecione um item\",\n          dropDownStyle: styles.dropdownList,\n          labelStyle: styles.dropdownText,\n          arrowColor: \"#F0EFF4\",\n          items: carros.map(function (carro) {\n            return {\n              label: carro.modelo,\n              value: carro.id\n            };\n          }),\n          style: styles.dropdown,\n          onChangeItem: function onChangeItem(item) {\n            setCarro(item.value);\n          }\n        }), _jsxs(View, {\n          style: styles.inputGroup,\n          children: [_jsx(View, {\n            style: styles.inputGroupColumn,\n            children: _jsx(TextField, {\n              labelName: \"Km incial\",\n              onChangeText: setkmInicial\n            })\n          }), _jsx(View, {\n            style: styles.inputGroupSecondColumn,\n            children: _jsx(TextField, {\n              labelName: \"Km final\",\n              onChangeText: setkmFinal\n            })\n          })]\n        }), _jsxs(View, {\n          style: styles.inputGroup,\n          children: [_jsx(View, {\n            style: styles.inputGroupColumn,\n            children: _jsx(TextField, {\n              labelName: \"Litros abastecidos\",\n              onChangeText: setLitrosAbastecidos\n            })\n          }), _jsxs(View, {\n            style: styles.inputGroupSecondColumn,\n            children: [_jsx(Text, {\n              style: styles.text,\n              children: \"Percurso\"\n            }), _jsx(DropDownPicker, {\n              placeholder: \"Selecione\",\n              dropDownStyle: styles.dropdownList,\n              labelStyle: styles.dropdownText,\n              arrowColor: \"#F0EFF4\",\n              items: [{\n                label: \"Rodoviário\",\n                value: \"Rodoviário\"\n              }, {\n                label: \"Urbano\",\n                value: \"Urbano\"\n              }, {\n                label: \"Misto\",\n                value: \"Misto\"\n              }],\n              style: styles.dropdown,\n              onChangeItem: function onChangeItem(item) {\n                setPercurso(item.value);\n              }\n            })]\n          })]\n        }), _jsx(Text, {\n          style: styles.text,\n          children: \"Combust\\xEDvel\"\n        }), _jsx(DropDownPicker, {\n          placeholder: \"Selecione um item\",\n          dropDownStyle: styles.dropdownList,\n          labelStyle: styles.dropdownText,\n          arrowColor: \"#F0EFF4\",\n          items: [{\n            label: \"Gasolina\",\n            value: \"Gasolina\"\n          }, {\n            label: \"Alcool\",\n            value: \"Alcool\"\n          }, {\n            label: \"Diesel\",\n            value: \"Diesel\"\n          }],\n          style: styles.dropdown,\n          onChangeItem: function onChangeItem(item) {\n            setCombustivel(item.value);\n          }\n        }), _jsxs(View, {\n          style: styles.consumoMedio,\n          children: [_jsx(Text, {\n            style: styles.text,\n            children: \"Consumo m\\xE9dio:\"\n          }), _jsxs(Text, {\n            style: styles.textResultado,\n            children: [mediaConsumo, \" Km/L\"]\n          })]\n        })]\n      }), _jsx(Button, {\n        title: \"Salvar\",\n        onPress: handleCreateAutonomia\n      })]\n    })]\n  });\n}\n\nexport default Autonomia;","map":{"version":3,"sources":["C:/Users/tizen/OneDrive/Documentos/GitHub/MeuPossante/mobile/src/pages/home/autonomia/index.tsx"],"names":["React","useEffect","useState","styles","DropDownPicker","BackScreen","TextField","LoadingScreen","Button","SuccessModal","FeedbackModal","api","Autonomia","navigation","carregando","setCarregando","modalVisible","setModalVisible","modalWarning","setModalWarning","modalMensage","setModalMensage","carros","setCarros","carro","setCarro","kmInicial","setkmInicial","kmFinal","setkmFinal","litrosAbastecidos","setLitrosAbastecidos","combustivel","setCombustivel","percurso","setPercurso","kmRodados","Number","mediaConsumo","toFixed","get","then","response","data","handleCreateAutonomia","FormData","append","toString","post","handleNavigateToVeiculos","navigate","closeModal","flexGrow","container","header","title","text","dropdownList","dropdownText","map","label","modelo","value","id","dropdown","item","inputGroup","inputGroupColumn","inputGroupSecondColumn","consumoMedio","textResultado"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { View, Text, ScrollView, Image, TouchableOpacity } from \"react-native\";\r\nimport { DrawerActions, useRoute } from \"@react-navigation/native\";\r\nimport styles from \"./styles\";\r\nimport { Feather } from \"@expo/vector-icons\";\r\nimport DropDownPicker from \"react-native-dropdown-picker\";\r\n\r\nimport BackScreen from \"../../../components/backScreen\";\r\nimport TextField from \"../../../components/textField\";\r\nimport LoadingScreen from \"../../../components/loadingScreen\";\r\nimport { Button } from \"../../../components/buttons\";\r\nimport { SuccessModal, FeedbackModal } from \"../../../components/feedbackModal\";\r\nimport api from \"../../../services/api\";\r\n\r\n\r\ninterface Carros {\r\n    id: number;\r\n    modelo: string;\r\n}\r\n\r\nfunction Autonomia({ navigation }: any) {\r\n\r\n    const [carregando, setCarregando] = useState(false);\r\n    const [modalVisible, setModalVisible] = useState(false);\r\n    const [modalWarning, setModalWarning] = useState(false);\r\n    const [modalMensage, setModalMensage] = useState(\"\");\r\n\r\n\r\n    const [carros, setCarros] = useState<Carros[]>([]);\r\n    const [carro, setCarro] = useState(\"\");\r\n    const [kmInicial, setkmInicial] = useState(\"\");\r\n    const [kmFinal, setkmFinal] = useState(\"\");\r\n    const [litrosAbastecidos, setLitrosAbastecidos] = useState(\"\");\r\n    const [combustivel, setCombustivel] = useState(\"\");\r\n    const [percurso, setPercurso] = useState(\"\");\r\n\r\n    const kmRodados = Number(kmFinal) - Number(kmInicial);\r\n    var mediaConsumo = 0;\r\n    if (kmRodados > 0 && Number(litrosAbastecidos) > 0) {\r\n        mediaConsumo = kmRodados / Number(litrosAbastecidos);\r\n        mediaConsumo = Number(mediaConsumo.toFixed(2))\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        api.get('carros/1').then(response => {\r\n            setCarros(response.data);\r\n        })\r\n    }, [])\r\n\r\n    async function handleCreateAutonomia() {\r\n        const data = new FormData();\r\n\r\n        data.append(\"kmInicial\", kmInicial);\r\n        data.append(\"kmFinal\", kmFinal);\r\n        data.append(\"litroAbastecidos\", litrosAbastecidos);\r\n        data.append(\"tipoCombustivel\", combustivel);\r\n        data.append(\"percurso\", percurso);\r\n        data.append(\"mediaConsumo\", mediaConsumo.toString());\r\n        data.append(\"carro\", carro);\r\n\r\n        try {\r\n            setCarregando(true)\r\n            await api.post(\"/autonomia\", data);\r\n        } catch (error) {\r\n            setCarregando(false);\r\n            setModalMensage(\"\");\r\n            setModalWarning(true);\r\n            return;\r\n        }\r\n\r\n        setModalMensage(\"Autonomia do veículo cadastrada com sucesso!\");\r\n        setModalVisible(true);\r\n    }\r\n\r\n    function handleNavigateToVeiculos() {\r\n        setModalVisible(!modalVisible);\r\n        setCarregando(false);\r\n        if (modalWarning == false) {\r\n            navigation.navigate(\"VeiculosCadastrados\");\r\n        }\r\n    }\r\n\r\n    function closeModal() {\r\n        setModalWarning(false);\r\n        setCarregando(false);\r\n    }\r\n\r\n    return (\r\n        <ScrollView contentContainerStyle={{ flexGrow: 1 }}>\r\n            <LoadingScreen carregando={carregando} />\r\n            <SuccessModal\r\n                modalVisible={modalVisible}\r\n                funcaoOnRequestClose={handleNavigateToVeiculos}\r\n                mensage={modalMensage} />\r\n            <FeedbackModal\r\n                modalVisible={modalWarning}\r\n                funcaoOnRequestClose={closeModal}\r\n                mensage={modalMensage} />\r\n            <View style={styles.container}>\r\n                <View style={styles.header}>\r\n                    <BackScreen />\r\n                    <Text style={styles.title}>Autonomia</Text>\r\n                    <View />\r\n                </View>\r\n                <View>\r\n                    <Text style={styles.text}>Veículo</Text>\r\n                    <DropDownPicker\r\n                        placeholder=\"Selecione um item\"\r\n                        dropDownStyle={styles.dropdownList}\r\n                        labelStyle={styles.dropdownText}\r\n                        arrowColor={\"#F0EFF4\"}\r\n                        items={carros.map(carro => ({ label: carro.modelo, value: carro.id }))}\r\n                        style={styles.dropdown}\r\n                        onChangeItem={(item) => {\r\n                            setCarro(item.value);\r\n                        }}\r\n                    ></DropDownPicker>\r\n                    <View style={styles.inputGroup}>\r\n                        <View style={styles.inputGroupColumn}>\r\n                            <TextField labelName=\"Km incial\" onChangeText={setkmInicial} />\r\n                        </View>\r\n                        <View style={styles.inputGroupSecondColumn}>\r\n                            <TextField labelName=\"Km final\" onChangeText={setkmFinal} />\r\n                        </View>\r\n                    </View>\r\n                    <View style={styles.inputGroup}>\r\n                        <View style={styles.inputGroupColumn}>\r\n                            <TextField labelName=\"Litros abastecidos\" onChangeText={setLitrosAbastecidos} />\r\n                        </View>\r\n                        <View style={styles.inputGroupSecondColumn}>\r\n                            <Text style={styles.text}>Percurso</Text>\r\n                            <DropDownPicker\r\n                                placeholder=\"Selecione\"\r\n                                dropDownStyle={styles.dropdownList}\r\n                                labelStyle={styles.dropdownText}\r\n                                arrowColor={\"#F0EFF4\"}\r\n                                items={[\r\n                                    { label: \"Rodoviário\", value: \"Rodoviário\" },\r\n                                    { label: \"Urbano\", value: \"Urbano\" },\r\n                                    { label: \"Misto\", value: \"Misto\" },\r\n                                ]}\r\n                                style={styles.dropdown}\r\n                                onChangeItem={(item) => { setPercurso(item.value) }}\r\n                            ></DropDownPicker>\r\n                        </View>\r\n                    </View>\r\n                    <Text style={styles.text}>Combustível</Text>\r\n                    <DropDownPicker\r\n                        placeholder=\"Selecione um item\"\r\n                        dropDownStyle={styles.dropdownList}\r\n                        labelStyle={styles.dropdownText}\r\n                        arrowColor={\"#F0EFF4\"}\r\n                        items={[\r\n                            { label: \"Gasolina\", value: \"Gasolina\" },\r\n                            { label: \"Alcool\", value: \"Alcool\" },\r\n                            { label: \"Diesel\", value: \"Diesel\" },\r\n                        ]}\r\n                        style={styles.dropdown}\r\n                        onChangeItem={(item) => { setCombustivel(item.value) }}\r\n                    ></DropDownPicker>\r\n                    <View style={styles.consumoMedio}>\r\n                        <Text style={styles.text}>Consumo médio:</Text>\r\n                        <Text style={styles.textResultado}>{mediaConsumo} Km/L</Text>\r\n                    </View>\r\n                </View>\r\n                <Button title=\"Salvar\" onPress={handleCreateAutonomia} />\r\n            </View>\r\n        </ScrollView>\r\n    );\r\n}\r\n\r\nexport default Autonomia;\r\n"]},"metadata":{},"sourceType":"module"}