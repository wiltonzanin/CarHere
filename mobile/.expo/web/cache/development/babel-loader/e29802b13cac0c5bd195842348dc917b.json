{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Feather } from '@expo/vector-icons';\nimport styles from \"./styles\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar textField = function textField(_ref) {\n  var labelName = _ref.labelName,\n      value = _ref.value,\n      tipoTeclado = _ref.tipoTeclado,\n      exibeOpcional = _ref.exibeOpcional,\n      mensagemErro = _ref.mensagemErro,\n      rest = _objectWithoutProperties(_ref, [\"labelName\", \"value\", \"tipoTeclado\", \"exibeOpcional\", \"mensagemErro\"]);\n\n  var exibirLabelOpcional = exibeOpcional ? true : false;\n  var exbirMensagemErro = false;\n\n  if (mensagemErro != '' && mensagemErro !== undefined) {\n    exbirMensagemErro = true;\n  }\n\n  return _jsxs(View, {\n    children: [_jsxs(View, {\n      style: styles.labelGroup,\n      children: [_jsx(Text, {\n        style: styles.formLabel,\n        children: labelName\n      }), exibirLabelOpcional && _jsx(Text, {\n        style: styles.labelOpcional,\n        children: \"(Opcional)\"\n      })]\n    }), _jsxs(View, {\n      style: styles.inputGroup,\n      children: [_jsx(TextInput, _objectSpread({\n        style: styles.input,\n        value: value,\n        keyboardType: tipoTeclado\n      }, rest)), exbirMensagemErro && _jsxs(Text, {\n        style: styles.labelErro,\n        children: [_jsx(Feather, {\n          name: \"alert-triangle\"\n        }), \" \", mensagemErro]\n      })]\n    })]\n  });\n};\n\nexport default textField;","map":{"version":3,"sources":["C:/Users/tizen/OneDrive/Documentos/GitHub/MeuPossante/mobile/src/components/textField/index.tsx"],"names":["React","Feather","styles","textField","labelName","value","tipoTeclado","exibeOpcional","mensagemErro","rest","exibirLabelOpcional","exbirMensagemErro","undefined","labelGroup","formLabel","labelOpcional","inputGroup","input","labelErro"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAgC,OAAhC;;;;AAEA,SAASC,OAAT,QAAwB,oBAAxB;AAEA,OAAOC,MAAP;;;;AAqBA,IAAMC,SAAmC,GAAG,SAAtCA,SAAsC,OAA6E;AAAA,MAA1EC,SAA0E,QAA1EA,SAA0E;AAAA,MAA/DC,KAA+D,QAA/DA,KAA+D;AAAA,MAAxDC,WAAwD,QAAxDA,WAAwD;AAAA,MAA3CC,aAA2C,QAA3CA,aAA2C;AAAA,MAA5BC,YAA4B,QAA5BA,YAA4B;AAAA,MAAXC,IAAW;;AAGrH,MAAIC,mBAAmB,GAAGH,aAAa,GAAG,IAAH,GAAU,KAAjD;AAEA,MAAII,iBAAiB,GAAG,KAAxB;;AAEA,MAAIH,YAAY,IAAI,EAAhB,IAAsBA,YAAY,KAAKI,SAA3C,EAAsD;AAClDD,IAAAA,iBAAiB,GAAG,IAApB;AACH;;AAGD,SACI,MAAC,IAAD;AAAA,eACI,MAAC,IAAD;AAAM,MAAA,KAAK,EAAET,MAAM,CAACW,UAApB;AAAA,iBACI,KAAC,IAAD;AAAM,QAAA,KAAK,EAAEX,MAAM,CAACY,SAApB;AAAA,kBAAgCV;AAAhC,QADJ,EAEKM,mBAAmB,IAAI,KAAC,IAAD;AAAM,QAAA,KAAK,EAAER,MAAM,CAACa,aAApB;AAAA;AAAA,QAF5B;AAAA,MADJ,EAKI,MAAC,IAAD;AAAM,MAAA,KAAK,EAAEb,MAAM,CAACc,UAApB;AAAA,iBACI,KAAC,SAAD;AAAW,QAAA,KAAK,EAAEd,MAAM,CAACe,KAAzB;AAAgC,QAAA,KAAK,EAAEZ,KAAvC;AAA8C,QAAA,YAAY,EAAEC;AAA5D,SAA6EG,IAA7E,EADJ,EAEKE,iBAAiB,IAAI,MAAC,IAAD;AAAM,QAAA,KAAK,EAAET,MAAM,CAACgB,SAApB;AAAA,mBAA+B,KAAC,OAAD;AAAS,UAAA,IAAI,EAAC;AAAd,UAA/B,OAAkEV,YAAlE;AAAA,QAF1B;AAAA,MALJ;AAAA,IADJ;AAYH,CAxBD;;AA0BA,eAAeL,SAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport { Text, TextInput, View } from 'react-native';\r\nimport { Feather } from '@expo/vector-icons';\r\n\r\nimport styles from './styles';\r\nimport { TextInputProps } from 'react-native';\r\n\r\ninterface TextFieldProps extends TextInputProps{\r\n    labelName: string;\r\n    value?: any;\r\n    tipoTeclado?: any;\r\n    exibeOpcional?: boolean;\r\n    secureTextEntry?: boolean;\r\n    mensagemErro?: string;\r\n}\r\n\r\n/**\r\n * Componente de TextIput com estilo padrão do app.\r\n * \r\n * @param labelName: (string) Informe a label a ser exibida acima do campo;\r\n * @param value: (string) Informe o value do campo;\r\n * @param tipoTeclado: (any) Tipos de teclado mais usados: email-address, numeric, number-pad, decimal-pad, phone-pad;\r\n * @param exibeOpcional: (boolean) Exibe ou não o texto (opcional) acima do TextInput;\r\n * \r\n */\r\nconst textField: React.FC<TextFieldProps> = ({ labelName, value, tipoTeclado, exibeOpcional, mensagemErro, ...rest }) => {\r\n\r\n    //#region variaveis    \r\n    let exibirLabelOpcional = exibeOpcional ? true : false;\r\n\r\n    let exbirMensagemErro = false;\r\n\r\n    if (mensagemErro != '' && mensagemErro !== undefined) {\r\n        exbirMensagemErro = true;\r\n    }\r\n    //#endregion\r\n\r\n    return (\r\n        <View>\r\n            <View style={styles.labelGroup}>\r\n                <Text style={styles.formLabel}>{labelName}</Text>\r\n                {exibirLabelOpcional && <Text style={styles.labelOpcional}>(Opcional)</Text>}\r\n            </View>\r\n            <View style={styles.inputGroup}>\r\n                <TextInput style={styles.input} value={value} keyboardType={tipoTeclado} {...rest}/>\r\n                {exbirMensagemErro && <Text style={styles.labelErro}><Feather name=\"alert-triangle\" /> {mensagemErro}</Text>}\r\n            </View>\r\n        </View>\r\n    );\r\n}\r\n\r\nexport default textField;"]},"metadata":{},"sourceType":"module"}