{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport BackHandler from \"react-native-web/dist/exports/BackHandler\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { DrawerActions, useNavigation, useFocusEffect } from \"@react-navigation/native\";\nimport { createDrawerNavigator, DrawerContentScrollView, DrawerItemList } from \"@react-navigation/drawer\";\nimport { Feather, MaterialCommunityIcons } from \"@expo/vector-icons\";\nimport styles from \"./styles\";\nimport Configuracoes from \"./configuracoes/telaPrincipal\";\nimport CadastroVeiculo from \"../cadastroVeiculo\";\nimport Veiculos from \"./veiculos/veiculos\";\nimport Autonomia from \"./autonomia\";\nimport Principal from \"./ajudaEfeedback/principal\";\nimport Servicos from \"./servicos\";\nimport { ButtonMenu } from \"../../components/buttons\";\nimport { ButtonAdicionar } from \"../../components/buttons\";\nimport Subscription from \"../home/subscription\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction Home(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useNavigation = useNavigation(),\n      navigate = _useNavigation.navigate;\n\n  useFocusEffect(function () {\n    var backAction = function backAction() {\n      Alert.alert(\"Espera aí\", \"Você tem certeza que deseja sair do aplicativo?\", [{\n        text: \"Não\",\n        onPress: function onPress() {\n          return null;\n        },\n        style: \"cancel\"\n      }, {\n        text: \"SIM\",\n        onPress: function onPress() {\n          return BackHandler.exitApp();\n        }\n      }]);\n      return true;\n    };\n\n    var backHandler = BackHandler.addEventListener(\"hardwareBackPress\", backAction);\n    return function () {\n      return backHandler.remove();\n    };\n  });\n  return _jsxs(ScrollView, {\n    style: styles.container,\n    children: [_jsxs(View, {\n      style: styles.header,\n      children: [_jsx(ButtonMenu, {\n        title: \"\",\n        onPress: function onPress() {\n          return navigation.dispatch(DrawerActions.openDrawer());\n        }\n      }), _jsx(Text, {\n        style: styles.title,\n        children: \"In\\xEDcio\"\n      }), _jsx(View, {})]\n    }), _jsxs(View, {\n      style: styles.content,\n      children: [_jsx(ScrollView, {\n        horizontal: true,\n        pagingEnabled: true,\n        children: _jsx(Image, {\n          source: require(\"../../assets/images/impreza.jpg\"),\n          style: styles.imgVeiculo\n        })\n      }), _jsx(View, {\n        style: styles.cardImg,\n        children: _jsx(Text, {\n          children: \"Impreza GC8\"\n        })\n      }), _jsxs(View, {\n        style: styles.card,\n        children: [_jsxs(View, {\n          style: styles.cardHeader,\n          children: [_jsx(Text, {\n            style: styles.cardTitle,\n            children: \"Servi\\xE7os\"\n          }), _jsx(Feather, {\n            name: \"chevron-right\",\n            size: 24,\n            color: \"#F0EFF4\"\n          })]\n        }), _jsxs(TouchableOpacity, {\n          style: styles.cardServices,\n          children: [_jsxs(View, {\n            style: styles.servicesHeader,\n            children: [_jsx(Text, {\n              style: styles.servicesTitle,\n              children: \"Monza\"\n            }), _jsx(Text, {\n              style: styles.servicesText,\n              children: \"24/08/2021\"\n            })]\n          }), _jsxs(Text, {\n            style: styles.textStatusOk,\n            children: [_jsx(Feather, {\n              name: \"check-circle\",\n              size: 14,\n              color: \"#5CB85C\"\n            }), \" \", \"Tudo certo!\"]\n          })]\n        }), _jsxs(TouchableOpacity, {\n          style: styles.cardServices,\n          children: [_jsxs(View, {\n            style: styles.servicesHeader,\n            children: [_jsx(Text, {\n              style: styles.servicesTitle,\n              children: \"Celta\"\n            }), _jsx(Text, {\n              style: styles.servicesText,\n              children: \"24/08/2021\"\n            })]\n          }), _jsxs(Text, {\n            style: styles.textStatusWarning,\n            children: [_jsx(Feather, {\n              name: \"alert-circle\",\n              size: 14,\n              color: \"#F0AD4E\"\n            }), \" \", \"Requer a\\xE7\\xE3o!\"]\n          })]\n        }), _jsx(ButtonAdicionar, {\n          title: \"Adicionar servi\\xE7o\"\n        })]\n      })]\n    })]\n  });\n}\n\nvar Drawer = createDrawerNavigator();\n\nfunction MyDrawer() {\n  return _jsxs(Drawer.Navigator, {\n    drawerContentOptions: {\n      activeBackgroundColor: \"#8F1622\"\n    },\n    drawerContent: function drawerContent(props) {\n      return _jsx(CustomDrawerContent, _objectSpread(_objectSpread({}, props), {}, {\n        style: styles.drawer\n      }));\n    },\n    children: [_jsx(Drawer.Screen, {\n      name: \"Inicio\",\n      component: Home,\n      options: {\n        drawerIcon: function drawerIcon(_ref2) {\n          var focused = _ref2.focused,\n              size = _ref2.size;\n          return _jsx(Feather, {\n            name: \"home\",\n            size: size,\n            color: focused ? \"#F0EFF4\" : \"#F0EFF4\"\n          });\n        }\n      }\n    }), _jsx(Drawer.Screen, {\n      name: \"Cadastrar ve\\xEDculo\",\n      component: CadastroVeiculo,\n      options: {\n        drawerIcon: function drawerIcon(_ref3) {\n          var focused = _ref3.focused,\n              size = _ref3.size;\n          return _jsx(Feather, {\n            name: \"plus\",\n            size: size,\n            color: focused ? \"#F0EFF4\" : \"#F0EFF4\"\n          });\n        }\n      }\n    }), _jsx(Drawer.Screen, {\n      name: \"Ve\\xEDculos cadastrados\",\n      component: Veiculos,\n      options: {\n        unmountOnBlur: true,\n        drawerIcon: function drawerIcon(_ref4) {\n          var focused = _ref4.focused,\n              size = _ref4.size;\n          return _jsx(Feather, {\n            name: \"list\",\n            size: size,\n            color: focused ? \"#F0EFF4\" : \"#F0EFF4\"\n          });\n        }\n      }\n    }), _jsx(Drawer.Screen, {\n      name: \"Autonomia\",\n      component: Autonomia,\n      options: {\n        unmountOnBlur: true,\n        drawerIcon: function drawerIcon(_ref5) {\n          var focused = _ref5.focused,\n              size = _ref5.size;\n          return _jsx(Feather, {\n            name: \"bar-chart-2\",\n            size: size,\n            color: focused ? \"#F0EFF4\" : \"#F0EFF4\"\n          });\n        }\n      }\n    }), _jsx(Drawer.Screen, {\n      name: \"Servi\\xE7os\",\n      component: Servicos,\n      options: {\n        drawerIcon: function drawerIcon(_ref6) {\n          var focused = _ref6.focused,\n              size = _ref6.size;\n          return _jsx(Feather, {\n            name: \"tool\",\n            size: size,\n            color: focused ? \"#F0EFF4\" : \"#F0EFF4\"\n          });\n        }\n      }\n    }), _jsx(Drawer.Screen, {\n      name: \"Premium\",\n      component: Subscription,\n      options: {\n        drawerIcon: function drawerIcon(_ref7) {\n          var focused = _ref7.focused,\n              size = _ref7.size;\n          return _jsx(MaterialCommunityIcons, {\n            name: \"crown-outline\",\n            size: size,\n            color: focused ? \"#F0EFF4\" : \"#F0EFF4\"\n          });\n        }\n      }\n    }), _jsx(Drawer.Screen, {\n      name: \"Configura\\xE7\\xF5es\",\n      component: Configuracoes,\n      options: {\n        drawerIcon: function drawerIcon(_ref8) {\n          var focused = _ref8.focused,\n              size = _ref8.size;\n          return _jsx(Feather, {\n            name: \"settings\",\n            size: size,\n            color: focused ? \"#F0EFF4\" : \"#F0EFF4\"\n          });\n        }\n      }\n    }), _jsx(Drawer.Screen, {\n      name: \"Ajuda e Feedback\",\n      component: Principal,\n      options: {\n        drawerIcon: function drawerIcon(_ref9) {\n          var focused = _ref9.focused,\n              size = _ref9.size;\n          return _jsx(Feather, {\n            name: \"help-circle\",\n            size: size,\n            color: focused ? \"#F0EFF4\" : \"#F0EFF4\"\n          });\n        }\n      }\n    })]\n  });\n}\n\nfunction CustomDrawerContent(props) {\n  return _jsx(DrawerContentScrollView, _objectSpread(_objectSpread({}, props), {}, {\n    children: _jsx(DrawerItemList, _objectSpread({\n      labelStyle: styles.drawerText\n    }, props))\n  }));\n}\n\nexport default function App() {\n  return _jsx(MyDrawer, {});\n}","map":{"version":3,"sources":["C:/Users/tizen/OneDrive/Documentos/GitHub/MeuPossante/mobile/src/pages/home/index.tsx"],"names":["React","DrawerActions","useNavigation","useFocusEffect","createDrawerNavigator","DrawerContentScrollView","DrawerItemList","Feather","MaterialCommunityIcons","styles","Configuracoes","CadastroVeiculo","Veiculos","Autonomia","Principal","Servicos","ButtonMenu","ButtonAdicionar","Subscription","Home","navigation","navigate","backAction","Alert","alert","text","onPress","style","BackHandler","exitApp","backHandler","addEventListener","remove","container","header","dispatch","openDrawer","title","content","require","imgVeiculo","cardImg","card","cardHeader","cardTitle","cardServices","servicesHeader","servicesTitle","servicesText","textStatusOk","textStatusWarning","Drawer","MyDrawer","activeBackgroundColor","props","drawer","drawerIcon","focused","size","unmountOnBlur","CustomDrawerContent","drawerText","App"],"mappings":"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","sourcesContent":["import * as React from \"react\";\r\nimport { View, Text, BackHandler, Alert, ScrollView, Image, TouchableOpacity } from \"react-native\";\r\nimport { DrawerActions, useNavigation, useFocusEffect } from \"@react-navigation/native\";\r\nimport {\r\n  createDrawerNavigator,\r\n  DrawerContentScrollView,\r\n  DrawerItemList,\r\n  DrawerContentComponentProps,\r\n} from \"@react-navigation/drawer\";\r\nimport { Feather, MaterialCommunityIcons } from \"@expo/vector-icons\";\r\n\r\nimport styles from \"./styles\";\r\nimport Configuracoes from \"./configuracoes/telaPrincipal\";\r\nimport CadastroVeiculo from \"../cadastroVeiculo\";\r\nimport Veiculos from \"./veiculos/veiculos\";\r\nimport Autonomia from \"./autonomia\"\r\nimport Principal from \"./ajudaEfeedback/principal\";\r\nimport Servicos from \"./servicos\";\r\nimport { ButtonMenu } from '../../components/buttons';\r\nimport { ButtonAdicionar } from '../../components/buttons';\r\nimport Subscription from '../home/subscription'\r\n\r\nfunction Home({ navigation }: any) {\r\n  const { navigate } = useNavigation();\r\n\r\n  useFocusEffect(() => {\r\n    const backAction = () => {\r\n      Alert.alert(\"Espera aí\", \"Você tem certeza que deseja sair do aplicativo?\", [\r\n        {\r\n          text: \"Não\",\r\n          onPress: () => null,\r\n          style: \"cancel\"\r\n        },\r\n        { text: \"SIM\", onPress: () => BackHandler.exitApp() }\r\n      ]);\r\n      return true;\r\n    };\r\n\r\n    const backHandler = BackHandler.addEventListener(\r\n      \"hardwareBackPress\",\r\n      backAction\r\n    );\r\n\r\n    return () => backHandler.remove();\r\n  });\r\n\r\n  return (\r\n    <ScrollView style={styles.container}>\r\n      <View style={styles.header}>\r\n        <ButtonMenu title=\"\" onPress={() => navigation.dispatch(DrawerActions.openDrawer())} />\r\n        <Text style={styles.title}>Início</Text>\r\n        <View />\r\n      </View>\r\n      <View style={styles.content}>\r\n        <ScrollView horizontal pagingEnabled>\r\n          <Image source={require('../../assets/images/impreza.jpg')} style={styles.imgVeiculo} />\r\n        </ScrollView>\r\n        <View style={styles.cardImg}>\r\n          <Text>Impreza GC8</Text>\r\n        </View>\r\n        <View style={styles.card}>\r\n          <View style={styles.cardHeader}>\r\n            <Text style={styles.cardTitle}>Serviços</Text>\r\n            <Feather name=\"chevron-right\" size={24} color=\"#F0EFF4\" />\r\n          </View>\r\n          <TouchableOpacity style={styles.cardServices}>\r\n            <View style={styles.servicesHeader}>\r\n              <Text style={styles.servicesTitle}>Monza</Text>\r\n              <Text style={styles.servicesText}>24/08/2021</Text>\r\n            </View>\r\n            <Text style={styles.textStatusOk}>\r\n              <Feather name=\"check-circle\" size={14} color=\"#5CB85C\" />{\" \"}\r\n              Tudo certo!\r\n            </Text>\r\n          </TouchableOpacity>\r\n          <TouchableOpacity style={styles.cardServices}>\r\n            <View style={styles.servicesHeader}>\r\n              <Text style={styles.servicesTitle}>Celta</Text>\r\n              <Text style={styles.servicesText}>24/08/2021</Text>\r\n            </View>\r\n            <Text style={styles.textStatusWarning}>\r\n              <Feather name=\"alert-circle\" size={14} color=\"#F0AD4E\" />{\" \"}\r\n              Requer ação!\r\n            </Text>\r\n          </TouchableOpacity>\r\n          <ButtonAdicionar title=\"Adicionar serviço\"></ButtonAdicionar>\r\n        </View>\r\n      </View>\r\n    </ScrollView>\r\n  );\r\n}\r\n\r\nconst Drawer = createDrawerNavigator();\r\n\r\n//Documentação https://reactnavigation.org/docs/drawer-navigator/#props\r\nfunction MyDrawer() {\r\n  return (\r\n    <Drawer.Navigator\r\n      drawerContentOptions={{ activeBackgroundColor: \"#8F1622\" }}\r\n      drawerContent={(props: DrawerContentComponentProps) => (\r\n        <CustomDrawerContent {...props} style={styles.drawer} />\r\n      )}\r\n    >\r\n      <Drawer.Screen\r\n        name=\"Inicio\"\r\n        component={Home}\r\n        options={{\r\n          drawerIcon: ({ focused, size }) => (\r\n            <Feather\r\n              name=\"home\"\r\n              size={size}\r\n              color={focused ? \"#F0EFF4\" : \"#F0EFF4\"}\r\n            />\r\n          ),\r\n        }}\r\n      />\r\n      <Drawer.Screen\r\n        name=\"Cadastrar veículo\"\r\n        component={CadastroVeiculo}\r\n        options={{\r\n          drawerIcon: ({ focused, size }) => (\r\n            <Feather\r\n              name=\"plus\"\r\n              size={size}\r\n              color={focused ? \"#F0EFF4\" : \"#F0EFF4\"}\r\n            />\r\n          ),\r\n        }}\r\n      />\r\n      <Drawer.Screen\r\n        name=\"Veículos cadastrados\"\r\n        component={Veiculos}\r\n        options={{\r\n          unmountOnBlur: true,\r\n          drawerIcon: ({ focused, size }) => (\r\n            <Feather\r\n              name=\"list\"\r\n              size={size}\r\n              color={focused ? \"#F0EFF4\" : \"#F0EFF4\"}\r\n            />\r\n          ),\r\n        }}\r\n      />\r\n      <Drawer.Screen\r\n        name=\"Autonomia\"\r\n        component={Autonomia}\r\n        options={{\r\n          unmountOnBlur: true,\r\n          drawerIcon: ({ focused, size }) => (\r\n            <Feather\r\n              name=\"bar-chart-2\"\r\n              size={size}\r\n              color={focused ? \"#F0EFF4\" : \"#F0EFF4\"}\r\n            />\r\n          ),\r\n        }}\r\n      />\r\n      <Drawer.Screen\r\n        name=\"Serviços\"\r\n        component={Servicos}\r\n        options={{\r\n          drawerIcon: ({ focused, size }) => (\r\n            <Feather\r\n              name=\"tool\"\r\n              size={size}\r\n              color={focused ? \"#F0EFF4\" : \"#F0EFF4\"}\r\n            />\r\n          ),\r\n        }}\r\n      />\r\n      <Drawer.Screen\r\n        name=\"Premium\"\r\n        component={Subscription}\r\n        options={{\r\n          drawerIcon: ({ focused, size }) => (\r\n            <MaterialCommunityIcons\r\n              name=\"crown-outline\"\r\n              size={size}\r\n              color={focused ? \"#F0EFF4\" : \"#F0EFF4\"}\r\n            />\r\n          ),\r\n        }}\r\n      />\r\n      <Drawer.Screen\r\n        name=\"Configurações\"\r\n        component={Configuracoes}\r\n        options={{\r\n          drawerIcon: ({ focused, size }) => (\r\n            <Feather\r\n              name=\"settings\"\r\n              size={size}\r\n              color={focused ? \"#F0EFF4\" : \"#F0EFF4\"}\r\n            />\r\n          ),\r\n        }}\r\n      />\r\n      <Drawer.Screen\r\n        name=\"Ajuda e Feedback\"\r\n        component={Principal}\r\n        options={{\r\n          drawerIcon: ({ focused, size }) => (\r\n            <Feather\r\n              name=\"help-circle\"\r\n              size={size}\r\n              color={focused ? \"#F0EFF4\" : \"#F0EFF4\"}\r\n            />\r\n          ),\r\n        }}\r\n      />\r\n    </Drawer.Navigator>\r\n  );\r\n}\r\n\r\nfunction CustomDrawerContent(props: DrawerContentComponentProps) {\r\n  return (\r\n    <DrawerContentScrollView {...props}>\r\n      <DrawerItemList labelStyle={styles.drawerText} {...props} />\r\n    </DrawerContentScrollView>\r\n  );\r\n}\r\n\r\nexport default function App() {\r\n  return <MyDrawer />;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}