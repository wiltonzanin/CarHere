{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from \"react\";\nimport { RectButton } from \"react-native-gesture-handler\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport styles from \"./styles\";\nimport TextField from \"../../components/textField\";\nimport BackScreen from \"../../components/backScreen\";\nimport api from \"../../services/api\";\nimport { Button } from \"../../components/buttons\";\nimport { CheckBox } from 'react-native-elements';\nimport { FeedbackModal } from \"../../components/feedbackModal\";\nimport LoadingScreen from \"../../components/loadingScreen\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction CadastroUsuario() {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      nome = _useState2[0],\n      setNome = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      email = _useState4[0],\n      setEmail = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      senha = _useState6[0],\n      setSenha = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      isSelected = _useState8[0],\n      setIsSelected = _useState8[1];\n\n  var _useNavigation = useNavigation(),\n      navigate = _useNavigation.navigate;\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      modalVisible = _useState10[0],\n      setModalVisible = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      modalWarning = _useState12[0],\n      setModalWarning = _useState12[1];\n\n  var _useState13 = useState(false),\n      _useState14 = _slicedToArray(_useState13, 2),\n      carregando = _useState14[0],\n      setCarregando = _useState14[1];\n\n  function handleCreateUsuario() {\n    var data;\n    return _regeneratorRuntime.async(function handleCreateUsuario$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            data = new FormData();\n            data.append(\"nome\", nome);\n            data.append(\"email\", email);\n            data.append(\"senha\", senha);\n            _context.prev = 4;\n            setCarregando(true);\n            _context.next = 8;\n            return _regeneratorRuntime.awrap(api.post(\"/usuarios\", data));\n\n          case 8:\n            _context.next = 14;\n            break;\n\n          case 10:\n            _context.prev = 10;\n            _context.t0 = _context[\"catch\"](4);\n            setCarregando(false);\n            setModalWarning(true);\n\n          case 14:\n            setModalVisible(true);\n\n          case 15:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[4, 10]], Promise);\n  }\n\n  function handleNavigateToTermos() {\n    navigate(\"Termos\");\n  }\n\n  function handleNavigateToIncial() {\n    setModalVisible(!modalVisible);\n    setCarregando(false);\n    navigate(\"Inicial\");\n  }\n\n  return _jsxs(ScrollView, {\n    contentContainerStyle: {\n      flexGrow: 1\n    },\n    children: [_jsx(LoadingScreen, {\n      carregando: carregando\n    }), _jsx(FeedbackModal, {\n      modalVisible: modalVisible,\n      funcaoOnRequestClose: handleNavigateToIncial\n    }), _jsxs(View, {\n      style: styles.container,\n      children: [_jsxs(View, {\n        style: styles.header,\n        children: [_jsx(BackScreen, {}), _jsx(Text, {\n          style: styles.title,\n          children: \"Vamos come\\xE7ar\"\n        }), _jsx(View, {})]\n      }), _jsxs(View, {\n        children: [_jsx(TextField, {\n          labelName: \"Nome\",\n          value: nome,\n          onChangeText: setNome\n        }), _jsx(TextField, {\n          labelName: \"E-mail\",\n          value: email,\n          onChangeText: setEmail,\n          tipoTeclado: \"email-address\"\n        }), _jsx(TextField, {\n          labelName: \"Senha\",\n          value: senha,\n          onChangeText: setSenha,\n          secureTextEntry: true\n        }), _jsx(TextField, {\n          labelName: \"Confirme sua senha\",\n          secureTextEntry: true\n        })]\n      }), _jsxs(View, {\n        children: [_jsxs(View, {\n          style: styles.termosECondicoes,\n          children: [_jsx(CheckBox, {\n            containerStyle: {\n              backgroundColor: '#252525',\n              borderColor: '#252525',\n              padding: 0,\n              margin: 0,\n              marginLeft: 0\n            },\n            checkedIcon: \"check-square-o\",\n            checkedColor: \"#8F1622\",\n            size: 25,\n            checked: isSelected,\n            onPress: function onPress() {\n              return setIsSelected(!isSelected);\n            }\n          }), _jsx(RectButton, {\n            style: styles.buttonTermosECondicoes,\n            onPress: handleNavigateToTermos,\n            children: _jsx(Text, {\n              style: styles.textTermosECondicoes,\n              children: \"Aceito os termos e condi\\xE7\\xF5es de uso de dados\"\n            })\n          })]\n        }), _jsx(Button, {\n          title: \"Pr\\xF3ximo\",\n          onPress: function onPress() {\n            return handleCreateUsuario();\n          }\n        })]\n      })]\n    })]\n  });\n}\n\nexport default CadastroUsuario;","map":{"version":3,"sources":["C:/Users/tizen/OneDrive/Documentos/GitHub/MeuPossante/mobile/src/pages/cadastroUsuario/index.tsx"],"names":["React","useState","RectButton","useNavigation","styles","TextField","BackScreen","api","Button","CheckBox","FeedbackModal","LoadingScreen","CadastroUsuario","nome","setNome","email","setEmail","senha","setSenha","isSelected","setIsSelected","navigate","modalVisible","setModalVisible","modalWarning","setModalWarning","carregando","setCarregando","handleCreateUsuario","data","FormData","append","post","handleNavigateToTermos","handleNavigateToIncial","flexGrow","container","header","title","termosECondicoes","backgroundColor","borderColor","padding","margin","marginLeft","buttonTermosECondicoes","textTermosECondicoes"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { RectButton } from \"react-native-gesture-handler\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport { Text, View, ScrollView } from \"react-native\";\r\n\r\nimport styles from \"./styles\";\r\nimport TextField from \"../../components/textField\";\r\nimport BackScreen from \"../../components/backScreen\";\r\nimport api from \"../../services/api\";\r\nimport { Button } from \"../../components/buttons\";\r\nimport { CheckBox } from 'react-native-elements';\r\nimport { FeedbackModal } from \"../../components/feedbackModal\";\r\nimport LoadingScreen from \"../../components/loadingScreen\";\r\n\r\nfunction CadastroUsuario() {\r\n  const [nome, setNome] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [senha, setSenha] = useState(\"\");\r\n  const [isSelected, setIsSelected] = useState(false);\r\n\r\n  const { navigate } = useNavigation();\r\n  const [modalVisible, setModalVisible] = useState(false);\r\n  const [modalWarning, setModalWarning] = useState(false);\r\n\r\n  const [carregando, setCarregando] = useState(false);\r\n\r\n  async function handleCreateUsuario() {\r\n    const data = new FormData();\r\n\r\n    data.append(\"nome\", nome);\r\n    data.append(\"email\", email);\r\n    data.append(\"senha\", senha);\r\n\r\n    try {\r\n      setCarregando(true)\r\n      await api.post(\"/usuarios\", data);\r\n    } catch (error) {\r\n      setCarregando(false)\r\n      setModalWarning(true);\r\n    }\r\n\r\n    setModalVisible(true);\r\n  }\r\n\r\n  function handleNavigateToTermos() {\r\n    navigate(\"Termos\");\r\n  }\r\n\r\n  function handleNavigateToIncial() {\r\n    setModalVisible(!modalVisible);\r\n    setCarregando(false);\r\n    navigate(\"Inicial\");\r\n  }\r\n\r\n  return (\r\n    <ScrollView contentContainerStyle={{ flexGrow: 1 }}>\r\n      <LoadingScreen carregando={carregando} />\r\n      <FeedbackModal\r\n        modalVisible={modalVisible}\r\n        funcaoOnRequestClose={handleNavigateToIncial} />\r\n      <View style={styles.container}>\r\n        <View style={styles.header}>\r\n          <BackScreen />\r\n          <Text style={styles.title}>Vamos começar</Text>\r\n          <View />\r\n        </View>\r\n        <View>\r\n          <TextField\r\n            labelName=\"Nome\"\r\n            value={nome}\r\n            onChangeText={setNome}\r\n          />\r\n          <TextField\r\n            labelName=\"E-mail\"\r\n            value={email}\r\n            onChangeText={setEmail}\r\n            tipoTeclado={\"email-address\"}\r\n          />\r\n          <TextField\r\n            labelName=\"Senha\"\r\n            value={senha}\r\n            onChangeText={setSenha}\r\n            secureTextEntry={true}\r\n          />\r\n          <TextField\r\n            labelName=\"Confirme sua senha\"\r\n            secureTextEntry={true}\r\n          />\r\n        </View>\r\n        <View>\r\n          {/* documentação: https://reactnativeelements.com/docs/checkbox/ */}\r\n          <View style={styles.termosECondicoes}>\r\n            <CheckBox\r\n              containerStyle={{ backgroundColor: '#252525', borderColor: '#252525', padding: 0, margin: 0, marginLeft: 0 }}\r\n              checkedIcon='check-square-o'\r\n              checkedColor='#8F1622'\r\n              size={25}\r\n              checked={isSelected}\r\n              onPress={() => setIsSelected(!isSelected)} />\r\n            <RectButton style={styles.buttonTermosECondicoes} onPress={handleNavigateToTermos}>\r\n              <Text style={styles.textTermosECondicoes}>Aceito os termos e condições de uso de dados</Text>\r\n            </RectButton>\r\n          </View>\r\n          <Button title=\"Próximo\" onPress={() => handleCreateUsuario()} />\r\n        </View>\r\n      </View>\r\n    </ScrollView >\r\n  );\r\n}\r\n\r\nexport default CadastroUsuario;"]},"metadata":{},"sourceType":"module"}