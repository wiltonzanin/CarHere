{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport styles from \"./styles\";\nimport TextField from \"../../../../components/textField\";\nimport BackScreen from \"../../../../components/backScreen\";\nimport { Button } from \"../../../../components/buttons\";\nimport DateTimePicker from '@react-native-community/datetimepicker';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction CadastroServicos() {\n  var _useNavigation = useNavigation(),\n      navigate = _useNavigation.navigate;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      datadoservico = _useState2[0],\n      setMotorizacao = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      ano = _useState4[0],\n      setAno = _useState4[1];\n\n  var _useState5 = useState(new Date(1598051730000)),\n      _useState6 = _slicedToArray(_useState5, 2),\n      date = _useState6[0],\n      setDate = _useState6[1];\n\n  var _useState7 = useState('date'),\n      _useState8 = _slicedToArray(_useState7, 2),\n      mode = _useState8[0],\n      setMode = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      show = _useState10[0],\n      setShow = _useState10[1];\n\n  var onChange = function onChange(event, selectedDate) {\n    var currentDate = selectedDate || date;\n    setShow(Platform.OS === 'ios');\n    setDate(currentDate);\n  };\n\n  var showMode = function showMode(currentMode) {\n    setShow(true);\n    setMode(currentMode);\n  };\n\n  var showDatepicker = function showDatepicker() {\n    showMode('date');\n  };\n\n  var showTimepicker = function showTimepicker() {\n    showMode('time');\n  };\n\n  console.log(date);\n  return _jsx(ScrollView, {\n    contentContainerStyle: {\n      flexGrow: 1\n    },\n    children: _jsxs(View, {\n      style: styles.container,\n      children: [_jsxs(View, {\n        style: styles.header,\n        children: [_jsx(BackScreen, {}), _jsx(Text, {\n          style: styles.title,\n          children: \"Cadastre o servi\\xE7o\"\n        }), _jsx(View, {})]\n      }), _jsxs(View, {\n        children: [_jsx(TextField, {\n          labelName: \"Nome\"\n        }), _jsx(TextField, {\n          labelName: \"Local que foi realizado o servi\\xE7o\"\n        }), _jsxs(View, {\n          style: styles.inputGroup,\n          children: [_jsx(View, {\n            style: styles.inputGroupSecondColumn,\n            children: _jsx(View, {\n              children: _jsx(TextField, {\n                placeholder: \"teste\",\n                labelName: \"Data do Servi\\xE7o\",\n                tipoTeclado: \"numeric\",\n                onTouchStart: showDatepicker,\n                onChangeText: setMotorizacao,\n                maxLength: 8\n              })\n            })\n          }), _jsx(View, {\n            style: styles.inputGroupColumn,\n            children: _jsx(TextField, {\n              placeholder: \"teste\",\n              labelName: \"Tempo de servi\\xE7o\",\n              tipoTeclado: \"numeric\",\n              onTouchStart: showTimepicker,\n              onChangeText: setMotorizacao,\n              maxLength: 4\n            })\n          }), show && _jsx(DateTimePicker, {\n            testID: \"dateTimePicker\",\n            value: date,\n            mode: mode,\n            is24Hour: true,\n            display: \"default\",\n            onChange: onChange\n          })]\n        }), _jsx(Text, {\n          style: styles.title,\n          children: \"date \"\n        }), _jsx(TextField, {\n          labelName: \"Valor do servi\\xE7o\",\n          tipoTeclado: \"numeric\"\n        }), _jsx(Text, {\n          style: styles.text,\n          children: \"Descri\\xE7\\xE3o do servi\\xE7o realizado:\"\n        }), _jsx(TextInput, {\n          style: styles.textInput,\n          multiline: true,\n          textAlignVertical: \"top\"\n        })]\n      }), _jsx(Button, {\n        title: \"Concluir\"\n      })]\n    })\n  });\n}\n\nexport default CadastroServicos;","map":{"version":3,"sources":["C:/Users/tizen/OneDrive/Documentos/GitHub/MeuPossante/mobile/src/pages/home/servicos/cadastro/index.tsx"],"names":["React","useState","useNavigation","styles","TextField","BackScreen","Button","DateTimePicker","CadastroServicos","navigate","datadoservico","setMotorizacao","ano","setAno","Date","date","setDate","mode","setMode","show","setShow","onChange","event","selectedDate","currentDate","Platform","OS","showMode","currentMode","showDatepicker","showTimepicker","console","log","flexGrow","container","header","title","inputGroup","inputGroupSecondColumn","inputGroupColumn","text","textInput"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport { Text, View, ScrollView, TextInput, TouchableOpacity, Image, Platform } from \"react-native\";\r\nimport * as ImagePicker from 'expo-image-picker';\r\n\r\nimport styles from \"./styles\";\r\nimport TextField from \"../../../../components/textField\";\r\nimport DropDownPicker from \"react-native-dropdown-picker\";\r\nimport BackScreen from \"../../../../components/backScreen\";\r\nimport { Button } from \"../../../../components/buttons\";\r\nimport { Feather } from \"@expo/vector-icons\";\r\nimport DateTimePicker from '@react-native-community/datetimepicker';\r\n\r\nfunction CadastroServicos() {\r\n  const { navigate } = useNavigation();\r\n  const [datadoservico, setMotorizacao] = useState(\"\");\r\n  const [ano, setAno] = useState(\"\");\r\n  const [date, setDate] = useState(new Date(1598051730000));\r\n  const [mode, setMode] = useState('date');\r\n  const [show, setShow] = useState(false);\r\n\r\n  const onChange = (event: any, selectedDate: any) => {\r\n    const currentDate = selectedDate || date;\r\n    setShow(Platform.OS === 'ios');\r\n    setDate(currentDate);\r\n  };\r\n\r\n  const showMode = (currentMode: any) => {\r\n    setShow(true);\r\n    setMode(currentMode);\r\n  };\r\n\r\n  const showDatepicker = () => {\r\n    showMode('date');\r\n  };\r\n\r\n  const showTimepicker = () => {\r\n    showMode('time');\r\n  };\r\n  console.log(date)\r\n\r\n\r\n  return (\r\n    <ScrollView contentContainerStyle={{ flexGrow: 1 }}>\r\n      <View style={styles.container}>\r\n\r\n        <View style={styles.header}>\r\n          <BackScreen />\r\n          <Text style={styles.title}>Cadastre o servi√ßo</Text>\r\n          <View />\r\n\r\n        </View>\r\n\r\n        <View>\r\n          <TextField labelName=\"Nome\" />\r\n          <TextField labelName=\"Local que foi realizado o servi√ßo\" />\r\n\r\n          <View style={styles.inputGroup}>\r\n            <View style={styles.inputGroupSecondColumn}>\r\n                <View>\r\n                  <TextField placeholder=\"teste\" labelName=\"Data do Servi√ßo\" tipoTeclado={\"numeric\"} onTouchStart={showDatepicker} onChangeText={setMotorizacao} maxLength={8}/>\r\n                </View>\r\n            </View>\r\n\r\n            <View style={styles.inputGroupColumn}>\r\n              <TextField placeholder=\"teste\" labelName=\"Tempo de servi√ßo\" tipoTeclado={\"numeric\"} onTouchStart={showTimepicker} onChangeText={setMotorizacao} maxLength={4}/>\r\n            </View>\r\n            {show && (\r\n              <DateTimePicker\r\n                testID=\"dateTimePicker\"\r\n                value={date}\r\n                mode={mode}\r\n                is24Hour={true}\r\n                display=\"default\"\r\n                onChange={onChange}\r\n              />\r\n            )}\r\n          </View>\r\n          <Text style={styles.title}>date </Text>\r\n          <TextField labelName=\"Valor do servi√ßo\" tipoTeclado={\"numeric\"} />\r\n          <Text style={styles.text}>Descri√ß√£o do servi√ßo realizado:</Text>\r\n          {/* documenta√ß√£o: https://reactnative.dev/docs/textinput */}\r\n          <TextInput\r\n            style={styles.textInput}\r\n            multiline={true}\r\n            textAlignVertical=\"top\" />\r\n        </View>\r\n\r\n        <Button title=\"Concluir\" />\r\n      </View>\r\n    </ScrollView>\r\n  );\r\n}\r\n\r\nexport default CadastroServicos;\r\n"]},"metadata":{},"sourceType":"module"}